name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.29.3'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Verify the installation
      run: flutter doctor -v
      
    - name: Analyze project source
      run: flutter analyze
      
    - name: Check formatting
      run: dart format --output=none --set-exit-if-changed .
      
    - name: Run tests
      run: flutter test
      
    - name: Generate test coverage
      run: flutter test --coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage/lcov.info
        fail_ci_if_error: true

  golden-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.29.3'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Run golden tests
      run: flutter test --update-goldens
      
    - name: Check for golden file changes
      run: |
        if [ -n "$(git status --porcelain test/goldens)" ]; then
          echo "Golden files have changed. Please update them locally and commit the changes."
          git status test/goldens
          exit 1
        fi

  package-analysis:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.29.3'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Run package analysis
      run: flutter pub deps
      
    - name: Check pub publish warnings
      run: flutter pub publish --dry-run
      
    - name: Install pana (package analyzer)
      run: flutter pub global activate pana
      
    - name: Run pana analysis
      run: flutter pub global run pana --no-warning --source path .

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.29.3'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Run security audit
      run: flutter pub deps --style=compact | grep -E "(direct|transitive)" || true
      
    - name: Check for known vulnerabilities
      run: |
        # Check pubspec.lock for known vulnerable packages
        # This is a basic check - in production you might want to use more sophisticated tools
        if grep -q "some_vulnerable_package" pubspec.lock; then
          echo "Found vulnerable dependencies"
          exit 1
        fi

  documentation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.29.3'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Generate documentation
      run: dart doc
      
    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v3
      with:
        name: documentation
        path: doc/api/
